#BlueJ class context
comment0.target=MaxwellContainerTest
comment0.text=\r\n\ Clase\ de\ pruebas\ para\ la\ clase\ MaxwellContainer.\r\n\ Esta\ clase\ prueba\ el\ comportamiento\ de\ los\ m\u00E9todos\ de\ MaxwellContainer.\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Configura\ el\ entorno\ antes\ de\ cada\ prueba.\r\n\ Inicializa\ el\ contenedor\ y\ lo\ hace\ invisible.\r\n
comment10.params=
comment10.target=void\ shouldNotAddHoleWhenInvalidCapacity()
comment10.text=\r\n\ Prueba\ que\ no\ se\ pueda\ agregar\ un\ agujero\ con\ capacidad\ inv\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment11.params=
comment11.target=void\ shouldStartSimulationWhenValid()
comment11.text=\r\n\ Prueba\ que\ se\ pueda\ iniciar\ la\ simulaci\u00F3n\ con\ un\ n\u00FAmero\ v\u00E1lido\ de\ ticks.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment12.params=
comment12.target=void\ shouldNotStartSimulationWhenInvalidTicks()
comment12.text=\r\n\ Prueba\ que\ no\ se\ pueda\ iniciar\ la\ simulaci\u00F3n\ con\ un\ n\u00FAmero\ inv\u00E1lido\ de\ ticks.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment13.params=
comment13.target=void\ shouldReturnTrueWhenGoalAchieved()
comment13.text=\r\n\ Prueba\ que\ se\ cumpla\ la\ condici\u00F3n\ de\ victoria.\r\n\ Verifica\ que\ el\ m\u00E9todo\ isGoal()\ retorne\ true\ cuando\ se\ cumple\ la\ condici\u00F3n.\r\n
comment14.params=
comment14.target=void\ shouldNotReturnTrueWhenGoalNotAchieved()
comment14.text=\r\n\ Prueba\ que\ no\ se\ cumpla\ la\ condici\u00F3n\ de\ victoria.\r\n\ Verifica\ que\ el\ m\u00E9todo\ isGoal()\ retorne\ false\ cuando\ no\ se\ cumple\ la\ condici\u00F3n.\r\n
comment15.params=
comment15.target=void\ shouldReturnDemonPositionsWhenDemonsExist()
comment15.text=\r\n\ Prueba\ que\ se\ devuelvan\ las\ posiciones\ de\ los\ demonios\ cuando\ existen.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment16.params=
comment16.target=void\ shouldNotReturnDemonPositionsWhenNoDemons()
comment16.text=\r\n\ Prueba\ que\ no\ se\ devuelvan\ posiciones\ si\ no\ hay\ demonios.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment17.params=
comment17.target=void\ shouldReturnParticleDataWhenParticlesExist()
comment17.text=\r\n\ Prueba\ que\ se\ devuelvan\ los\ datos\ de\ las\ part\u00EDculas\ cuando\ existen.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment18.params=
comment18.target=void\ shouldNotReturnParticleDataWhenNoParticles()
comment18.text=\r\n\ Prueba\ que\ no\ se\ devuelvan\ datos\ si\ no\ hay\ part\u00EDculas.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment19.params=
comment19.target=void\ shouldReturnHoleDataWhenHolesExist()
comment19.text=\r\n\ Prueba\ que\ se\ devuelvan\ los\ datos\ de\ los\ agujeros\ cuando\ existen.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Limpia\ el\ entorno\ despu\u00E9s\ de\ cada\ prueba.\r\n\ Finaliza\ la\ simulaci\u00F3n\ y\ asegura\ que\ el\ contenedor\ est\u00E9\ invisible.\r\n
comment20.params=
comment20.target=void\ shouldNotReturnHoleDataWhenNoHoles()
comment20.text=\r\n\ Prueba\ que\ no\ se\ devuelvan\ datos\ si\ no\ hay\ agujeros.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment21.params=
comment21.target=void\ shouldMakeContainerVisible()
comment21.text=\r\n\ Prueba\ que\ se\ pueda\ hacer\ visible\ el\ contenedor.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment22.params=
comment22.target=void\ shouldMakeContainerInvisible()
comment22.text=\r\n\ Prueba\ que\ se\ pueda\ hacer\ invisible\ el\ contenedor.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment23.params=
comment23.target=void\ shouldFinishSimulation()
comment23.text=\r\n\ Prueba\ que\ se\ pueda\ finalizar\ la\ simulaci\u00F3n.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment24.params=
comment24.target=void\ shouldReturnTrueWhenLastActionSuccessful()
comment24.text=\r\n\ Prueba\ que\ se\ retorne\ true\ si\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment25.params=
comment25.target=void\ shouldNotReturnTrueWhenLastActionFailed()
comment25.text=\r\n\ Prueba\ que\ no\ se\ retorne\ true\ si\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment26.params=
comment26.target=void\ shouldNotAddParticleInOtherPlayersArena()
comment26.text=\r\n\ Prueba\ que\ no\ se\ puedan\ agregar\ part\u00EDculas\ en\ el\ \u00E1rea\ del\ jugador\ contrario.\r\n
comment3.params=
comment3.target=void\ shouldAddParticleWhenValid()
comment3.text=\r\n\ Prueba\ que\ se\ pueda\ agregar\ una\ part\u00EDcula\ v\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment4.params=
comment4.target=void\ shouldNotAddParticleWhenInvalidContainer()
comment4.text=\r\n\ Prueba\ que\ no\ se\ pueda\ agregar\ una\ part\u00EDcula\ en\ una\ posici\u00F3n\ inv\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment5.params=
comment5.target=void\ shouldDeleteParticleWhenExists()
comment5.text=\r\n\ Prueba\ que\ se\ pueda\ eliminar\ una\ part\u00EDcula\ existente.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment6.params=
comment6.target=void\ shouldNotDeleteParticleWhenNotExists()
comment6.text=\r\n\ Prueba\ que\ no\ se\ pueda\ eliminar\ una\ part\u00EDcula\ que\ no\ existe.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment7.params=
comment7.target=void\ shouldAddDemonWhenValid()
comment7.text=\r\n\ Prueba\ que\ se\ pueda\ agregar\ un\ demonio\ en\ una\ posici\u00F3n\ v\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
comment8.params=
comment8.target=void\ shouldNotAddDemonWhenInvalidPosition()
comment8.text=\r\n\ Prueba\ que\ no\ se\ pueda\ agregar\ un\ demonio\ en\ una\ posici\u00F3n\ inv\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fall\u00F3.\r\n
comment9.params=
comment9.target=void\ shouldAddHoleWhenValid()
comment9.text=\r\n\ Prueba\ que\ se\ pueda\ agregar\ un\ agujero\ en\ una\ posici\u00F3n\ v\u00E1lida.\r\n\ Verifica\ que\ la\ \u00FAltima\ acci\u00F3n\ fue\ exitosa.\r\n
numComments=27
