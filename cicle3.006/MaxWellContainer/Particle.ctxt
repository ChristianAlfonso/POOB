#BlueJ class context
comment0.target=Particle
comment0.text=\r\n\ Clase\ que\ representa\ una\ part\u00EDcula\ en\ un\ contenedor.\r\n\ Hereda\ de\ la\ clase\ `Circle`\ y\ a\u00F1ade\ funcionalidades\ como\ movimiento,\r\n\ rebote\ en\ los\ bordes\ y\ una\ l\u00EDnea\ divisoria,\ y\ manejo\ de\ velocidad.\r\n
comment1.params=x\ y\ color\ isRed\ diameter\ speedX\ speedY\ originalX
comment1.target=Particle(int,\ int,\ java.lang.String,\ boolean,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Constructor\ para\ crear\ una\ part\u00EDcula\ con\ posici\u00F3n,\ color,\ di\u00E1metro,\ velocidad\ y\ tipo\ (roja\ o\ no).\r\n\r\n\ @param\ x\ \ \ \ \ \ \ \ \ \ \ La\ posici\u00F3n\ inicial\ en\ el\ eje\ X\ (coordenada\ interna).\r\n\ @param\ y\ \ \ \ \ \ \ \ \ \ \ La\ posici\u00F3n\ inicial\ en\ el\ eje\ Y.\r\n\ @param\ color\ \ \ \ \ \ \ El\ color\ de\ la\ part\u00EDcula.\r\n\ @param\ isRed\ \ \ \ \ \ \ Indica\ si\ la\ part\u00EDcula\ es\ de\ color\ rojo.\r\n\ @param\ diameter\ \ \ \ El\ di\u00E1metro\ de\ la\ part\u00EDcula.\r\n\ @param\ speedX\ \ \ \ \ \ La\ velocidad\ en\ el\ eje\ X.\r\n\ @param\ speedY\ \ \ \ \ \ La\ velocidad\ en\ el\ eje\ Y.\r\n\ @param\ originalX\ \ \ La\ coordenada\ X\ original\ (puede\ ser\ negativa).\r\n
comment10.params=
comment10.target=void\ invertDirectionX()
comment10.text=\r\n\ Invierte\ la\ direcci\u00F3n\ de\ la\ part\u00EDcula\ en\ el\ eje\ X.\r\n\ Esto\ cambia\ el\ signo\ de\ la\ velocidad\ en\ el\ eje\ X,\ haciendo\ que\ la\ part\u00EDcula\r\n\ se\ mueva\ en\ la\ direcci\u00F3n\ opuesta.\r\n
comment11.params=
comment11.target=void\ setIsInRedContainer()
comment11.text=\r\n\ Establece\ si\ la\ part\u00EDcula\ est\u00E1\ en\ el\ contenedor\ rojo\ bas\u00E1ndose\ en\ su\ posici\u00F3n\ en\ el\ eje\ X.\r\n\ Si\ la\ posici\u00F3n\ en\ X\ es\ menor\ o\ igual\ a\ 0,\ se\ considera\ que\ la\ part\u00EDcula\ est\u00E1\ en\ el\ contenedor\ rojo.\r\n
comment12.params=
comment12.target=boolean\ getIsInRedContainer()
comment12.text=\r\n\ Obtiene\ si\ la\ part\u00EDcula\ est\u00E1\ en\ el\ contenedor\ rojo.\r\n\ Este\ m\u00E9todo\ actualiza\ primero\ el\ estado\ de\ la\ part\u00EDcula\ llamando\ a\ `setIsInRedContainer`.\r\n\r\n\ @return\ `true`\ si\ la\ part\u00EDcula\ est\u00E1\ en\ el\ contenedor\ rojo,\ `false`\ en\ caso\ contrario.\r\n
comment13.params=speedX
comment13.target=void\ setSpeedX(int)
comment13.text=\r\n\ Establece\ la\ velocidad\ horizontal\ de\ la\ part\u00EDcula.\r\n\ \r\n\ @param\ speedX\ La\ nueva\ velocidad\ en\ el\ eje\ X\ (p\u00EDxeles\ por\ movimiento)\r\n\ @throws\ IllegalArgumentException\ Si\ el\ valor\ excede\ los\ l\u00EDmites\ permitidos\r\n
comment14.params=speedY
comment14.target=void\ setSpeedY(int)
comment14.text=\r\n\ Establece\ la\ velocidad\ vertical\ de\ la\ part\u00EDcula.\r\n\ \r\n\ @param\ speedY\ La\ nueva\ velocidad\ en\ el\ eje\ Y\ (p\u00EDxeles\ por\ movimiento)\r\n\ @throws\ IllegalArgumentException\ Si\ el\ valor\ excede\ los\ l\u00EDmites\ permitidos\r\n
comment15.params=x
comment15.target=void\ setXPosition(int)
comment15.text=\r\n\ Establece\ la\ posici\u00F3n\ horizontal\ absoluta\ de\ la\ part\u00EDcula.\r\n\ \r\n\ @param\ x\ La\ nueva\ coordenada\ X\ en\ p\u00EDxeles\r\n\ @throws\ IllegalArgumentException\ Si\ la\ posici\u00F3n\ est\u00E1\ fuera\ del\ contenedor\r\n
comment16.params=y
comment16.target=void\ setYPosition(int)
comment16.text=\r\n\ Establece\ la\ posici\u00F3n\ vertical\ absoluta\ de\ la\ part\u00EDcula.\r\n\ \r\n\ @param\ y\ La\ nueva\ coordenada\ Y\ en\ p\u00EDxeles\r\n\ @throws\ IllegalArgumentException\ Si\ la\ posici\u00F3n\ est\u00E1\ fuera\ del\ contenedor\r\n
comment2.params=
comment2.target=void\ setTransferred()
comment2.text=\r\n\ Marca\ la\ part\u00EDcula\ como\ transferida.\r\n
comment3.params=
comment3.target=boolean\ isTransferred()
comment3.text=\r\n\ Indica\ si\ la\ part\u00EDcula\ ya\ ha\ sido\ transferida.\r\n\r\n\ @return\ `true`\ si\ la\ part\u00EDcula\ ha\ sido\ transferida,\ `false`\ en\ caso\ contrario.\r\n
comment4.params=
comment4.target=int\ getOriginalX()
comment4.text=\r\n\ Obtiene\ la\ coordenada\ X\ original\ (puede\ ser\ negativa).\r\n\r\n\ @return\ La\ coordenada\ X\ original.\r\n
comment5.params=containerWidth\ containerHeight\ lineX
comment5.target=void\ move(int,\ int,\ int)
comment5.text=\r\n\ Mueve\ la\ part\u00EDcula\ dentro\ del\ contenedor,\ manejando\ rebotes\ en\ los\ bordes\r\n\ y\ en\ la\ l\u00EDnea\ divisoria.\r\n\r\n\ @param\ containerWidth\ \ El\ ancho\ del\ contenedor.\r\n\ @param\ containerHeight\ La\ altura\ del\ contenedor.\r\n\ @param\ lineX\ \ \ \ \ \ \ \ \ \ \ La\ posici\u00F3n\ en\ X\ de\ la\ l\u00EDnea\ divisoria.\r\n
comment6.params=
comment6.target=void\ handleCollision()
comment7.params=
comment7.target=int\ getSpeedX()
comment7.text=\r\n\ Obtiene\ la\ velocidad\ actual\ de\ la\ part\u00EDcula\ en\ el\ eje\ X.\r\n\r\n\ @return\ La\ velocidad\ en\ el\ eje\ X.\r\n
comment8.params=
comment8.target=int\ getSpeedY()
comment8.text=\r\n\ Obtiene\ la\ velocidad\ actual\ de\ la\ part\u00EDcula\ en\ el\ eje\ Y.\r\n\r\n\ @return\ La\ velocidad\ en\ el\ eje\ Y.\r\n
comment9.params=
comment9.target=boolean\ isRed()
comment9.text=\r\n\ Indica\ si\ la\ part\u00EDcula\ es\ de\ color\ rojo.\r\n\r\n\ @return\ true\ si\ la\ part\u00EDcula\ es\ roja,\ false\ en\ caso\ contrario.\r\n
numComments=17
